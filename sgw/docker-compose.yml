version: '3'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9201:9200
    networks:
      elastic:
        ipv4_address: 172.16.238.2
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    ports:
      - 9202:9200  
    networks:
      elastic:
        ipv4_address: 172.16.238.3
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    ports:
      - 9203:9200  
    networks:
      elastic:
        ipv4_address: 172.16.238.4
  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.1
    container_name: kibana
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://172.16.238.10:9200
      - MONITORING_ENABLED=false
    ports:
      - 5601:5601
    networks:
      elastic:
        ipv4_address: 172.16.238.5
  swg:
    image: opsterio/sgw:latest
    container_name: sgw
    ports:
      - 9200:9200
      - 8080:8080    
    volumes:
      - ./default.conf:/app/resources/default.conf
      - ./logback.xml:/app/resources/logback.xml
    networks:
      elastic:
        ipv4_address: 172.16.238.10
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command: ["--config.file", "/etc/prometheus/prometheus.yml", "--web.enable-lifecycle"]
    networks:
      elastic:
        ipv4_address: 172.16.238.11
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - PROMETHEUS_URL=http://172.16.238.11:9090
    ports:
      - "3000:3000"
    volumes:
      - ./prometheus.yml:/etc/grafana/grafana.ini
      - ./config-datasource.yml:/etc/grafana/provisioning/datasources/config-datasource.yml
      - ./config-dashboard.yml:/etc/grafana/provisioning/dashboards/config-dashboard.yml   
    networks:
      elastic:
        ipv4_address: 172.16.238.12
        


volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
